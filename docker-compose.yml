services:
  postgres:
    image: postgres:16-alpine
    container_name: neurobot-postgres
    environment:
      POSTGRES_USER: neuro_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: neurobot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuro_user -d neurobot_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    ports:
      - "5432:5432"
    networks:
      - neurobot_network

  redis:
    image: redis:7-alpine
    container_name: neurobot-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    ports:
      - "6379:6379"
    networks:
      - neurobot_network

  nats:
    image: nats:2-alpine
    container_name: neurobot-nats
    restart: always
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - neurobot_network

  webhook:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.webhook
    container_name: neurobot-webhook
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - neurobot_network

  message-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.msg_worker
    container_name: neurobot-msg-worker
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - neurobot_network

  llm-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.llm_worker
    container_name: neurobot-llm-worker
    restart: always
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - neurobot_network

networks:
  neurobot_network:

volumes:
  postgres_data:
  redis_data: